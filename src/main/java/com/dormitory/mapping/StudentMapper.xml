<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dormitory.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.dormitory.entity.Student">
    <id column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="dormitory_id" jdbcType="INTEGER" property="dormitoryId" />
    <result column="bed_id" jdbcType="INTEGER" property="bedId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone_number" jdbcType="BIGINT" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Base_Column_List">
    student_id, dormitory_id, bed_id, name, phone_number, email, password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dormitory.entity.Student">
    insert into student (student_id, dormitory_id, bed_id, 
      name, phone_number, email, 
      password)
    values (#{studentId,jdbcType=BIGINT}, #{dormitoryId,jdbcType=INTEGER}, #{bedId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dormitory.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="dormitoryId != null">
        dormitory_id,
      </if>
      <if test="bedId != null">
        bed_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="dormitoryId != null">
        #{dormitoryId,jdbcType=INTEGER},
      </if>
      <if test="bedId != null">
        #{bedId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dormitory.entity.Student">
    update student
    <set>
      <if test="dormitoryId != null">
        dormitory_id = #{dormitoryId,jdbcType=INTEGER},
      </if>
      <if test="bedId != null">
        bed_id = #{bedId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dormitory.entity.Student">
    update student
    set dormitory_id = #{dormitoryId,jdbcType=INTEGER},
      bed_id = #{bedId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
</mapper>